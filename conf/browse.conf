cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _(Documentos),
		labelSingular = _("documento"),
 		labelPlural = _("documentos"),
		table = ca_objects,
		
		restrictToTypes = [item],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l>^ca_objects.preferred_labels</l>",
			},
			list = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l>^ca_objects.preferred_labels</l>",
			},
			# map = {
			# 	data = ca_objects.georeference,
			# 	width = 100%,
			# 	height = 600px,
			# 	minZoomLevel = 2,
			# 	maxZoomLevel = 18,
			# 	display = {
			# 		labelTemplate = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
			# 		contentTemplate = <div style='float:left; margin:0px 10px 10px 0px;'>^ca_object_representations.media.icon</div><p>^ca_objects.description</p>
			# 	}
			# },
			# timeline = {
			# 	data = ca_objects.unitdate.date_value,
			# 	display = {
			# 		title_template = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
			# 		description_template = <p>^ca_objects.description</p>,
			# 		credit_template = ^ca_objects.rightsStatement.rightsStatement_text,
			# 		caption_template = <em>^ca_objects.caption</em>,
			# 		image = ^ca_object_representations.media.small,
			# 		icon = ^ca_object_representations.media.icon
			# 	}
			# }
		},
		sortBy = {
			Title = ca_object_labels.name,
			Date = ca_objects.unitdate.date_value,
			Identifier = ca_objects.idno
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
	},
	collections = {
		displayName = _(Colecciones),
		labelSingular = _("colección"),
 		labelPlural = _("colecciones"),
		table = ca_collections,
		restrictToTypes = [internal, fondo],
		availableFacets = [entity, place, type],
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			images = {
				result_caption = "<small><l>^ca_collections.idno</l></small><br/><l>^ca_collections.preferred_labels</l>",
			}, 
			list = {
				result_caption = "<small><l>^ca_collections.idno</l></small><br/><l>^ca_collections.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_collections.idno,
			Name = ca_collection_labels.name
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	entities = {
		displayName = _(Personas o entidades),
		labelSingular = _("persona"),
 		labelPlural = _("personas"),
		table = ca_entities,
		restrictToTypes = [],
		availableFacets = [],
		showLetterBarFrom = ca_entity_labels.surname,
		showLetterBarSorts = [ca_entity_labels.surname; ca_entity_labels.forename],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<small><l>^ca_entities.idno</l></small><br/><l>^ca_entities.preferred_labels</l>",
			}, 
			list = {
				result_caption = "<small><l>^ca_entities.idno</l></small><br/><l>^ca_entities.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_entities.idno,
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		options = {
			selectMediaUsingRelationshipTypes = [relationshipType],
			selectMediaUsingTypes = [objectType]
		}
	},
	# proyectos = {
	# 	displayName = _(Proyectos),
	# 	labelSingular = _("proyecto"),
 	# 	labelPlural = _("proyectos"),
	# 	table = ca_collections,

	# 	restrictToTypes = [proyecto],
	# 	availableFacets = [collection, entity, place],
	# 	# formats available for display of results
	# 	# possible values are: images, list, timeline, map
	# 	views = { 
	# 		images = {
	# 			result_caption = "<small><l>^ca_collections.idno</l></small><br/><l>^ca_collections.preferred_labels</l>",
	# 		}, 
	# 		list = {
	# 			result_caption = "<small><l>^ca_collections.idno</l></small><br/><l>^ca_collections.preferred_labels</l>",
	# 		}
	# 	},

	# 	sortBy = {
	# 		Relevance = _natural,
	# 		Name = ca_set.preferred_labels
	# 	},
	# },
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# Para personalizar los facets: Es necesario copiar la configuración de los facets en el archivo de configuración de la aplicación desde app/conf/browse.conf. Personalizar la configuración desde aquí.

# Configuration for object browse
ca_objects = {
	facets = {
		institution_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [institucion],
			restrict_to_relationship_types = [],

			group_mode = alphabetical,

			label_singular = _("institución"),
			label_plural = _("instituciones")
		},
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			#single_value = 1,
			group_mode = none,
			
			label_yes = _("Digitalizado"),
			label_no = _("No digitalizado"),
			
			label_singular = _("digitalización"),
			label_plural = _("digitalizaciones")
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [internal, fondo, subcoleccion, subfondo],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("colección"),
			label_plural = _("colecciones")
		},

		proyecto_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [proyecto],
			restrict_to_relationship_types = [],

			group_mode = alphabetical,

			label_singular = _("proyecto"),
			label_plural = _("proyectos")
		},

		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				type = _("Type"),
				relationship_types = _("Role")
			},
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],
			
			indefinite_article = an,
			label_singular = _("entidad"),
			label_plural = _("entidades")
		},
		
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _("place"),
			label_plural = _("places")
		},
		century_facet = {
			type = normalizedDates,
			element_code = unitdate.date_value,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = centuries,
			
			group_mode = none,
			
			label_singular = _("siglo"),
			label_plural = _("siglos")
		},
		decade_facet = {
			type = normalizedDates,
			element_code = unitdate.date_value,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("década"),
			label_plural = _("décadas")
		},
		year_facet = {
			type = normalizedDates,
			element_code = unitdate.date_value,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = years,
			
			group_mode = none,
			#single_value = 1950,
			
			label_singular = _("año"),
			label_plural = _("años")
		}
	}
}

# Configuration for entity browse
ca_entities = {
	facets = {
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_entities_x_places,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("place"),
			label_plural = _("places")
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("occurrence"),
			label_plural = _("occurrences")
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("collection"),
			label_plural = _("collections")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_entities_x_vocabulary_terms,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,
			order_by_label_fields = [name_plural],
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_entities_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			#single_value = 1,
			group_mode = none,
			
			label_yes = _("Has media"),
			label_no = _("Has no media"),
			
			label_singular = _("has media"),
			label_plural = _("has media")
		}
	}
}

# --------------------------------------------------------------------
# Configuration for collection browse
ca_collections = {
	facets = {
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [internal, fondo, subcoleccion, subfondo],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("colección"),
			label_plural = _("colecciones")
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [name_sort],
			
			indefinite_article = an,
			label_singular = _("entity"),
			label_plural = _("entities")
		},
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_places_x_collections,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("place"),
			label_plural = _("places")
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_occurrences_x_collections,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("occurrence"),
			label_plural = _("occurrences")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_collections_x_vocabulary_terms,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,
			order_by_label_fields = [name_plural],
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		# status_facet = {
		# 	type = fieldList,
		# 	field = status,
			
		# 	group_mode = alphabetical,
			
		# 	label_singular = _("status"),
		# 	label_plural = _("statuses")
		# },
		# access_facet = {
		# 	type = fieldList,
		# 	field = access,
			
		# 	group_mode = alphabetical,
			
		# 	indefinite_article = an,
		# 	label_singular = _("access status"),
		# 	label_plural = _("access statuses")
		# },
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_collections_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			#single_value = 1,
			group_mode = none,
			
			label_yes = _("Has media"),
			label_no = _("Has no media"),
			
			label_singular = _("has media"),
			label_plural = _("has media")
		}
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = Explorar por

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =